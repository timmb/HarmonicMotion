#version 130
#extension GL_EXT_gpu_shader4: enable

uniform sampler2D tex;
varying vec2 uv;

vec3 colors[15] = vec3[](
	vec3(0.10196078431372549,0.7372549019607844,0.611764705882353),
	vec3(0.9450980392156862,0.7686274509803922,0.058823529411764705),
	vec3(0.1803921568627451,0.8,0.44313725490196076),
	vec3(0.9019607843137255,0.49411764705882355,0.13333333333333333),
	vec3(0.20392156862745098,0.596078431372549,0.8588235294117647),
	vec3(0.9058823529411765,0.2980392156862745,0.23529411764705882),
	vec3(0.6078431372549019,0.34901960784313724,0.7137254901960784),
	vec3(0.08627450980392157,0.6274509803921569,0.5215686274509804),
	vec3(0.9529411764705882,0.611764705882353,0.07058823529411765),
	vec3(0.1607843137254902,0.5019607843137255,0.7254901960784313),
	vec3(0.7529411764705882,0.2235294117647059,0.16862745098039217),
	vec3(0.1803921568627451,0.8,0.44313725490196076),
	vec3(0.9019607843137255,0.49411764705882355,0.13333333333333333),
	vec3(0.8274509803921568,0.32941176470588235,0.0),
	vec3(0.6078431372549019,0.34901960784313724,0.7137254901960784)
	);

vec3 getColor(float userIndex)
{
	if (userIndex > 250)
	{
		return vec3(0.0,0.0,0.0);
	}
	else
	{
		// return vec3(1.0, 0.0,0.0);
		int n = int(mod(int(userIndex), 15));
		return colors[n];
	}
}

void main()
{
	float index = floor(texture2D(tex, uv).r*255.);
	gl_FragColor = vec4(getColor(index), 1.);
	// gl_FragColor = texture2D(tex, uv);
	// gl_FragColor = vec4(uv.x, uv.y, 0., 1.);
	// gl_FragColor = vec4(1.,0.,0.,1.);
}